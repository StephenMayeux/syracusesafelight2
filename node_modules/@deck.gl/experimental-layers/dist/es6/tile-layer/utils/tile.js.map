{"version":3,"sources":["../../../../src/tile-layer/utils/tile.js"],"names":["Tile","constructor","getTileData","x","y","z","isVisible","_data","_loader","_loadData","data","Promise","resolve","isLoaded","Boolean","getTileDataPromise","then","buffers","isOverlapped","tile","m","Math","pow","floor"],"mappings":"AAAA,eAAe,MAAMA,IAAN,CAAW;AACxBC,EAAAA,WAAW,CAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA,CAAd;AAAiBC,IAAAA,CAAjB;AAAoBC,IAAAA;AAApB,GAAD,EAAyB;AAClC,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKJ,WAAL,GAAmBA,WAAnB;AAEA,SAAKK,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKA,OAAL,GAAe,KAAKC,SAAL,EAAf;AACD;;AAED,MAAIC,IAAJ,GAAW;AACT,QAAI,KAAKH,KAAT,EAAgB;AACd,aAAOI,OAAO,CAACC,OAAR,CAAgB,KAAKL,KAArB,CAAP;AACD;;AACD,WAAO,KAAKC,OAAZ;AACD;;AAED,MAAIK,QAAJ,GAAe;AACb,WAAOC,OAAO,CAAC,KAAKP,KAAN,CAAd;AACD;;AAEDE,EAAAA,SAAS,GAAG;AAAA,UACHN,CADG,GACQ,IADR,CACHA,CADG;AAAA,UACAC,CADA,GACQ,IADR,CACAA,CADA;AAAA,UACGC,CADH,GACQ,IADR,CACGA,CADH;;AAEV,QAAI,CAAC,KAAKH,WAAV,EAAuB;AACrB,aAAO,IAAP;AACD;;AACD,UAAMa,kBAAkB,GAAG,KAAKb,WAAL,CAAiB;AAACC,MAAAA,CAAD;AAAIC,MAAAA,CAAJ;AAAOC,MAAAA;AAAP,KAAjB,CAA3B;AACAU,IAAAA,kBAAkB,CAACC,IAAnB,CAAwBC,OAAO,IAAI;AACjC,WAAKV,KAAL,GAAaU,OAAb;AACA,aAAOA,OAAP;AACD,KAHD;AAIA,WAAOF,kBAAP;AACD;;AAEDG,EAAAA,YAAY,CAACC,IAAD,EAAO;AAAA,UACVhB,CADU,GACC,IADD,CACVA,CADU;AAAA,UACPC,CADO,GACC,IADD,CACPA,CADO;AAAA,UACJC,CADI,GACC,IADD,CACJA,CADI;AAEjB,UAAMe,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,IAAI,CAACd,CAAL,GAASA,CAArB,CAAV;AACA,WAAOgB,IAAI,CAACE,KAAL,CAAWJ,IAAI,CAAChB,CAAL,GAASiB,CAApB,MAA2BjB,CAA3B,IAAgCkB,IAAI,CAACE,KAAL,CAAWJ,IAAI,CAACf,CAAL,GAASgB,CAApB,MAA2BhB,CAAlE;AACD;;AAzCuB","sourcesContent":["export default class Tile {\n  constructor({getTileData, x, y, z}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = true;\n    this.getTileData = getTileData;\n\n    this._data = null;\n    this._loader = null;\n    this._loader = this._loadData();\n  }\n\n  get data() {\n    if (this._data) {\n      return Promise.resolve(this._data);\n    }\n    return this._loader;\n  }\n\n  get isLoaded() {\n    return Boolean(this._data);\n  }\n\n  _loadData() {\n    const {x, y, z} = this;\n    if (!this.getTileData) {\n      return null;\n    }\n    const getTileDataPromise = this.getTileData({x, y, z});\n    getTileDataPromise.then(buffers => {\n      this._data = buffers;\n      return buffers;\n    });\n    return getTileDataPromise;\n  }\n\n  isOverlapped(tile) {\n    const {x, y, z} = this;\n    const m = Math.pow(2, tile.z - z);\n    return Math.floor(tile.x / m) === x && Math.floor(tile.y / m) === y;\n  }\n}\n"],"file":"tile.js"}