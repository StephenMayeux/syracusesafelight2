{"version":3,"sources":["../../../src/bezier-curve-layer/bezier-curve-layer.js"],"names":["Layer","GL","Model","Geometry","fp64","fp64LowPart","vs","fs","NUM_SEGMENTS","DEFAULT_COLOR","defaultProps","strokeWidth","getSourcePosition","x","sourcePosition","getTargetPosition","targetPosition","getControlPoint","controlPoint","getColor","color","BezierCurveLayer","modules","attributeManager","state","addInstanced","instanceSourcePositions","size","transition","accessor","update","calculateInstanceSourcePositions","instanceTargetPositions","calculateInstanceTargetPositions","instanceControlPoints","calculateInstanceControlPoints","instanceColors","type","UNSIGNED_BYTE","calculateInstanceColors","props","oldProps","changeFlags","invalidateAll","gl","context","setState","model","_getModel","updateAttribute","uniforms","render","Object","assign","positions","i","concat","getShaders","id","geometry","drawMode","TRIANGLE_STRIP","attributes","Float32Array","isInstanced","shaderCache","setUniforms","numSegments","attribute","data","value","forEach","object","isNaN","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './bezier-curve-layer-vertex.glsl';\nimport fs from './bezier-curve-layer-fragment.glsl';\n\nconst NUM_SEGMENTS = 40;\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  strokeWidth: 1,\n  fp64: false,\n  getSourcePosition: x => x.sourcePosition,\n  getTargetPosition: x => x.targetPosition,\n  getControlPoint: x => x.controlPoint,\n  getColor: x => x.color || DEFAULT_COLOR\n};\n\nexport default class BezierCurveLayer extends Layer {\n  getShaders() {\n    return {vs, fs, modules: ['picking']};\n  }\n\n  initializeState() {\n    const {attributeManager} = this.state;\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getSourcePosition',\n        update: this.calculateInstanceSourcePositions\n      },\n      instanceTargetPositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getTargetPosition',\n        update: this.calculateInstanceTargetPositions\n      },\n      instanceControlPoints: {\n        size: 3,\n        transition: false,\n        accessor: 'getControlPoint',\n        update: this.calculateInstanceControlPoints\n      },\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getColor',\n        update: this.calculateInstanceColors\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateAttribute({props, oldProps, changeFlags}) {\n    if (props.fp64 !== oldProps.fp64) {\n      const {attributeManager} = this.state;\n      attributeManager.invalidateAll();\n    }\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      this.setState({model: this._getModel(gl)});\n    }\n    this.updateAttribute({props, oldProps, changeFlags});\n  }\n\n  draw({uniforms}) {\n    const {strokeWidth} = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        strokeWidth\n      })\n    );\n  }\n\n  _getModel(gl) {\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    let positions = [];\n    for (let i = 0; i <= NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n    return model;\n  }\n\n  calculateInstanceSourcePositions(attribute) {\n    const {data, getSourcePosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    data.forEach(object => {\n      const sourcePosition = getSourcePosition(object);\n      value[i + 0] = sourcePosition[0];\n      value[i + 1] = sourcePosition[1];\n      value[i + 2] = isNaN(sourcePosition[2]) ? 0 : sourcePosition[2];\n      i += size;\n    });\n  }\n\n  calculateInstanceTargetPositions(attribute) {\n    const {data, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    data.forEach(object => {\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = targetPosition[0];\n      value[i + 1] = targetPosition[1];\n      value[i + 2] = isNaN(targetPosition[2]) ? 0 : targetPosition[2];\n      i += size;\n    });\n  }\n\n  calculateInstanceControlPoints(attribute) {\n    const {data, getControlPoint} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    data.forEach(object => {\n      const controlPoint = getControlPoint(object);\n      value[i + 0] = controlPoint[0];\n      value[i + 1] = controlPoint[1];\n      value[i + 2] = isNaN(controlPoint[2]) ? 0 : controlPoint[2];\n      i += size;\n    });\n  }\n\n  calculateInstanceSourceTargetPositions64xyLow(attribute) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    data.forEach(object => {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = fp64LowPart(sourcePosition[0]);\n      value[i + 1] = fp64LowPart(sourcePosition[1]);\n      value[i + 2] = fp64LowPart(targetPosition[0]);\n      value[i + 3] = fp64LowPart(targetPosition[1]);\n      i += size;\n    });\n  }\n\n  calculateInstanceColors(attribute) {\n    const {data, getColor} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    data.forEach(object => {\n      const color = getColor(object);\n      value[i + 0] = color[0];\n      value[i + 1] = color[1];\n      value[i + 2] = color[2];\n      value[i + 3] = isNaN(color[3]) ? 255 : color[3];\n      i += size;\n    });\n  }\n}\n\nBezierCurveLayer.layerName = 'BezierCurveLayer';\nBezierCurveLayer.defaultProps = defaultProps;\n"],"file":"bezier-curve-layer.js"}