{"version":3,"sources":["../../../../src/tile-layer/utils/tile.js"],"names":["Tile","getTileData","x","y","z","isVisible","_data","_loader","_loadData","getTileDataPromise","then","buffers","tile","m","Math","pow","floor","Promise","resolve","Boolean"],"mappings":";;;;;;IAAqBA,I;;;AACnB,sBAAoC;AAAA,QAAvBC,WAAuB,QAAvBA,WAAuB;AAAA,QAAVC,CAAU,QAAVA,CAAU;AAAA,QAAPC,CAAO,QAAPA,CAAO;AAAA,QAAJC,CAAI,QAAJA,CAAI;;AAAA;;AAClC,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKJ,WAAL,GAAmBA,WAAnB;AAEA,SAAKK,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKA,OAAL,GAAe,KAAKC,SAAL,EAAf;AACD;;;;gCAaW;AAAA;;AAAA,UACHN,CADG,GACQ,IADR,CACHA,CADG;AAAA,UACAC,CADA,GACQ,IADR,CACAA,CADA;AAAA,UACGC,CADH,GACQ,IADR,CACGA,CADH;;AAEV,UAAI,CAAC,KAAKH,WAAV,EAAuB;AACrB,eAAO,IAAP;AACD;;AACD,UAAMQ,kBAAkB,GAAG,KAAKR,WAAL,CAAiB;AAACC,QAAAA,CAAC,EAADA,CAAD;AAAIC,QAAAA,CAAC,EAADA,CAAJ;AAAOC,QAAAA,CAAC,EAADA;AAAP,OAAjB,CAA3B;AACAK,MAAAA,kBAAkB,CAACC,IAAnB,CAAwB,UAAAC,OAAO,EAAI;AACjC,QAAA,KAAI,CAACL,KAAL,GAAaK,OAAb;AACA,eAAOA,OAAP;AACD,OAHD;AAIA,aAAOF,kBAAP;AACD;;;iCAEYG,I,EAAM;AAAA,UACVV,CADU,GACC,IADD,CACVA,CADU;AAAA,UACPC,CADO,GACC,IADD,CACPA,CADO;AAAA,UACJC,CADI,GACC,IADD,CACJA,CADI;AAEjB,UAAMS,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,IAAI,CAACR,CAAL,GAASA,CAArB,CAAV;AACA,aAAOU,IAAI,CAACE,KAAL,CAAWJ,IAAI,CAACV,CAAL,GAASW,CAApB,MAA2BX,CAA3B,IAAgCY,IAAI,CAACE,KAAL,CAAWJ,IAAI,CAACT,CAAL,GAASU,CAApB,MAA2BV,CAAlE;AACD;;;wBA5BU;AACT,UAAI,KAAKG,KAAT,EAAgB;AACd,eAAOW,OAAO,CAACC,OAAR,CAAgB,KAAKZ,KAArB,CAAP;AACD;;AACD,aAAO,KAAKC,OAAZ;AACD;;;wBAEc;AACb,aAAOY,OAAO,CAAC,KAAKb,KAAN,CAAd;AACD;;;;;;SAtBkBN,I","sourcesContent":["export default class Tile {\n  constructor({getTileData, x, y, z}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = true;\n    this.getTileData = getTileData;\n\n    this._data = null;\n    this._loader = null;\n    this._loader = this._loadData();\n  }\n\n  get data() {\n    if (this._data) {\n      return Promise.resolve(this._data);\n    }\n    return this._loader;\n  }\n\n  get isLoaded() {\n    return Boolean(this._data);\n  }\n\n  _loadData() {\n    const {x, y, z} = this;\n    if (!this.getTileData) {\n      return null;\n    }\n    const getTileDataPromise = this.getTileData({x, y, z});\n    getTileDataPromise.then(buffers => {\n      this._data = buffers;\n      return buffers;\n    });\n    return getTileDataPromise;\n  }\n\n  isOverlapped(tile) {\n    const {x, y, z} = this;\n    const m = Math.pow(2, tile.z - z);\n    return Math.floor(tile.x / m) === x && Math.floor(tile.y / m) === y;\n  }\n}\n"],"file":"tile.js"}